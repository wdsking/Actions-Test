name: Required Reviews
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: 
      - 'main'
      - 'uat'
  pull_request_review:
    types: [submitted, dismissed]
    branches: 
      - 'main'
      - 'uat'

permissions:
  pull-requests: write
  checks: write

jobs:
  check-reviews:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: ['required-reviewer-username']  // replace with actual username
            });
            
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            const requiredReviewer = 'Filosek';
            const latestReview = reviews
              .filter(review => review.user.login === requiredReviewer)
              .sort((a, b) => new Date(b.submitted_at) - new Date(a.submitted_at))[0];
            
            const isApproved = latestReview?.state === 'APPROVED';
            
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Required Review Check',
              head_sha: context.payload.pull_request.head.sha,
              status: 'completed',
              conclusion: isApproved ? 'success' : 'failure',
              output: {
                title: isApproved ? 'Required review approved' : 'Waiting for required review',
                summary: isApproved ? 'All required reviews completed' : 'Waiting for approval from required reviewer'
              }
            });
